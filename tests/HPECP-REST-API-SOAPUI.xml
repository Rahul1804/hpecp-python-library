<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="820f677a-811f-44c7-9ea7-677cee198bf8" activeEnvironment="Default" name="REST Project 1" soapui-version="5.5.0" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="972ae77c-f8e4-48bf-96ab-132c3be2ef14" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:8080" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://ChrisMBP.lan:8080/</con:endpoint><con:endpoint>http://localhost:8080</con:endpoint></con:endpoints><con:resource name="" path="/api/v1" id="e06feb44-fd5e-4c2c-9d3b-35e77ab5af53"><con:settings/><con:parameters/><con:method name="login" id="8078e88b-a6c3-4d3a-a363-005fc5e0f6cf" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Login Request" id="298ba253-e4c1-4280-b0de-fbc8660b18bd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080</con:endpoint><con:request/><con:originalUri>http://localhost/api/v1</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:restMockService id="8be56fa0-eb7e-4788-bad2-0f00290f00b5" port="8080" path="/" host="ChrisMBP.lan" name="REST MockService"><con:settings/><con:properties/><con:restMockAction name="/api/v1" method="POST" resourcePath="/api/v1" id="e86d033e-bbf4-46aa-b23a-706dd44c3404"><con:settings/><con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

import groovy.json.JsonSlurper


def json = new JsonSlurper().parseText(mockRequest.getRequestContent())
log.info json
	

if ( json.name == 'admin' ) {
	return "Login Success"
} else {
	return "Login Failed"
}

/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Login Success" id="06e02e58-a362-4e87-a8ce-53c7ac87117f" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent/><con:header><con:name>location</con:name><con:value>/api/v1/session/df1bfacb-xxxx-xxxx-xxxx-c8f57d8f3c7</con:value></con:header></con:response><con:response name="Login Failed" id="4dbba52b-4103-47a0-8d64-8912c4777560" httpResponseStatus="401"><con:settings/><con:responseContent/></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/></con:soapui-project>